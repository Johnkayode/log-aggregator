version: '3'
services:

  zookeeper:
    ports:
      - '50000:2181'
    image: zookeeper:3.5.9
  kafka:
    ports:
      - '50001:9092'
      - '50002:9093'
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'INTERNAL://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_CREATE_TOPICS: 'logs:1:1'
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal 
    image: 'wurstmeister/kafka:2.13-2.8.1'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
  #   environment:
  #     - "discovery.type=single-node"
  #   ports:
  #     - "9200:9200"
  #   networks:
  #     - elk-network

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:7.15.0
  #   volumes:
  #     - ./logstash-kafka.conf:/usr/share/logstash/pipeline
  #   ports:
  #     - "5000:5000"
  #   environment:
  #     - "xpack.monitoring.elasticsearch.hosts=http://elasticsearch:9200"
  #   depends_on:
  #     - elasticsearch
  #     - kafka
  #   networks:
  #     - elk-network

  logger:
    build: .
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=logs
    entrypoint: ./startapp.sh

  consumer:
    build: .
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=logs
    command: python -u consumer.py

# networks:
#   # elk-network: